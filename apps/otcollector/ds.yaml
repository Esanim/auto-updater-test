apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: otel-collector
spec:
  image: otel/opentelemetry-collector-contrib:0.74.0
  serviceAccount: monitoring-sa
  mode: daemonset
  ports:
    - name: metric
      port: 9090
      targetPort: 9090
      protocol: TCP
  env:
    - name: K8S_NODE_NAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
  config: |
    receivers:
      otlp:
        protocols:
          grpc:
          http:
            cors:
              allowed_origins:
                - http://*
                - https://*

    processors:
      batch:
        send_batch_max_size: 1000
        timeout: 30s
        send_batch_size : 800

      memory_limiter:
         check_interval: 1s
         limit_percentage: 70
         spike_limit_percentage: 30

      k8sattributes:
        auth_type: serviceAccount
        passthrough: false
        filter:
          node_from_env_var: K8S_NODE_NAME
        extract:
          metadata:
            - k8s.pod.name
            - k8s.pod.uid
            - k8s.deployment.name
            - k8s.namespace.name
            - k8s.node.name
            - k8s.pod.start_time

    exporters:
      prometheus:
        endpoint: prometheus-server.monitoring.svc.cluster.local:81
      otlp:
        protocols:
          grpc:
          http:

    extensions:
      memory_ballast:
        size_in_percentage: 20
      health_check:
      zpages:
        endpoint: 0.0.0.0:55679

    service:
      extensions: [memory_ballast, health_check, zpages]
      pipelines:
        metrics:
          receivers: [otlp]
          processors: [memory_limiter,k8sattributes,batch]
          exporters: [otlp]
      telemetry:
        metrics:
          address: ":8888"
